help
input test;
input test;
draw((0,0)--(100,100));
erase;
size(100.5,100.5);
draw((0,0)--(1,1));
size(0,100.5);
draw((0,0)--(2,1),Arrow);
erase;
size(3cm);
draw((0,0)--(1,0)--(1,1)--(0,1)--cycle);
erase;
unitspuare;
unitsquare;
unitsquare;
unitsize(1cm);
draw(unitsquare);
size(3cm);
draw(unitsquare);
label("$A$",(0,0),SW);
label("$B$",(1,0),SE);
label("$C$",(1,1),NE);
label("$D$",(0,1),NW);
size(100,0);
draw((1,0){up}..{left}(0,1),Arrow);
erase;
path unitcircle=E..N..W..S..cycle;
size(0,100);
path unitcircle=E..N..W..S..cycle;
path g=scale(2)*unitcircle;
filldraw(unitcircle^^g,evenodd+yellow,black);
filldraw(unitcircle^^reverse(g),yellow,black);
erase;
filldraw(unitcircle^^reverse(g),yellow,black);
draw(unitbox);
import three;
currentprojection=orthographic(5,4,2,center=true);
size(5cm);
size3(3cm,5cm,8cm);
draw(unitbox);
dot(unitbox,red);
label("$O$",(0,0,0),NW);
label("(1,0,0)",(1,0,0),S);
label("(0,1,0)",(0,1,0),E);
label("(0,0,1)",(0,0,1),Z);
\end;
\end;
import three;
currentprojection=orthographic(5,4,2,center=true);
size(5cm);
size3(3cm,5cm,8cm);
draw(unitbox);
dot(unitbox,red);
label("$O$",(0,0,0),NW);
label("(1,0,0)",(1,0,0),S);
label("(0,1,0)",(0,1,0),E);
label("(0,0,1)",(0,0,1),Z);
\end;
erase;
import three;
currentprojection=orthographic(5,4,2,center=true);
size(5cm);
size3(3cm,5cm,8cm);
draw(unitbox);
dot(unitbox,red);
 ;
a;
input 3d;
input test;
input 3d;
size(3cm);
draw(unitsquare);
label("$A$",(0,0),SW);
label("$B$",(1,0),SE);
label("$C$",(1,1));
erase;
size(100,0);
draw((1,0){up}..{left}(0,1),Aroow);
draw((1,0){up}..{left}(0,1),Arrow);
path unitcircle=E..N..W..S..cycle;
draw(unitcircle);
erase;
draw(unitcircle);
path g=scale(2)*unitcircle;
draw(g);
erase;
filldraw(unitcircle^^g);
erase;
filldraw(unitcircle^^g,evenodd+yellow);
filldraw(unitcircle^^g,evenodd+yellow,black);
erase;
filldraw(unitcircle^^g,evenodd+yellow,black);
erase;
filldraw(unitcircle^^g,evenodd+yellow);
erase;
filldraw(unitcircle^^g,evenodd+black);
erase;
filldraw(unitcircle^^g,evenodd+yellow,green);
erase;
filldraw(unitcircle^^g,evenodd+yellow);
filldraw(unitcircle^^g,evenodd+yellow);
erase;
filldraw(unitcircle^^g,evenodd);
erase;
filldraw(unitcircle^^g,green);
erase;
filldraw(unitcircle^^g,grey);
filldraw(unitcircle^^g,evenoddgrey);
filldraw(unitcircle^^g,evenodd+grey);
erase;
filldraw(unitcircle^^g,evenodd+grey);
erase;
filldraw(unitcircle^^g,evenodd+grey,white);
import three;
draw(unitbox);
currentprojection=orthographic(5,4,2,center=true);
draw(unitbox);
import the;
import three;
draw(unitbox);
draw(unitbox);
erase;
draw(unitbox);
erase;
currentprojection=orthographic(5,4,2,center=true);
draw(unitbox);
size(5cm);
size3(3cm,5cm,8cm);
draw(unitbox);
dot(unitbox,red);
label("$O$",(0,0,0),NW);
label("(1,0,0)",(1,0,0),S);
label("(0,1,0)",(0,1,0),E);
label("(0,0,1)",(0,0,1),Z);
input unitbox.asy;
input unitbox.asy;
import three;
size(100);
path3 g=(1,0,0)..(0,1,0)..(-1,0,0)..(0,-1,0)..cycle;
draw(g);
draw(O--Z,red+dashed,Arrow3);
draw(((-1,-1,0)--(1,-1,0)--(1,1,0)--(-1,1,0)--cycle));
dot(g,red);
input test;
version;
draw((0,0)--(1,1));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(100,100));
draw((0,0)--(1,1));
write(unitcircle);
draw(unitcircle);
pwd;
size(1cm);
draw(unitcircle);
draw(unitcircle*3);
draw(3*unitcircle);
help
write(unitbox);
write(unitsquare);
import proof.asy;
pair a;
a=(0,0);
pair b,c;
b=(1,0);
c=(1,1);
draw(a--b--c--cycle);
size(1cm);
erase;
draw(a--b--c--cycle);
pair a,b,c,d,e,f;
a=(0,0);
b=(1,0);
c=(1,1);
d=(0,1);
draw(a--b--c--d--cycle);
size(1cm);
import proof.asy;
input proof.asy;
input proof.asy;
import geometry;
line m;
help
help
help
write(unitsquare);
import three;
write(currentprojection);
currentprojection;
projection;
import three;
unitsize(1cm);
size(50);
currentprojection = orthographic(1/2, -1, 1/2);  // orthographicは平行投影 perspectiveは透視投影(遠近歪みあり);
// defaultはcurrentprojection = perspective(5, 4, 2);
draw((0,0,0)--(1,0,0)--(1,1,0)--(0,1,0)--cycle,red);  // 立体pathはpath3となる;
draw((0,0,0)--(1,1,1));
draw(scale3(20)*box(O, (1,1,1)));  // 6面体 Oは(0, 0, 0);
draw(surface(O--(1,9,1)--(10, 20, 10)--(4, 1, 10)--cycle), red, nolight);  // 表面塗り潰し;
draw(unitsqure3);
draw(unitcircle3);
erase;
import solids;
revolution r = cylinder(O,1,1.5,Y+Z);  // 円柱(底面の中心点, 底面半径, 高さ, 方向);
draw(r);
draw(cone(O, 1, 2, n=0));  // 円錐(底面の中心点, 底面半径, 高さ);
draw(sphere(O,1));  // 球(中心点, 半径);
draw(surface(sphere(O,2)), lightred);  // 表面を塗り潰し;
import solids;
revolution r = cylinder(O,1,1.5,Y+Z);  // 円柱(底面の中心点, 底面半径, 高さ, 方向);
draw(r);
draw(cone(O, 1, 2, n=0));  // 円錐(底面の中心点, 底面半径, 高さ);
import math;
add(grid); ;
draw(unitbox);
draw(unitsquare);
size(10cm);
erase;
draw(unitsquare);
size(10cm);
draw(unitaquare);
draw(unitsquare);
draw(scale(2)*unitsquare);
draw(scale(3)*unitsquare);
draw(shift(1,1)*unitsquare);
draw(shift(1,1)*scale(2)*unitsquare);
import graph;
draw(Circle((0, 0), 20));  // 中心(0, 0)で半径20の円;
size(150,0);
real f(real x) {return exp(x);};
xaxis("$x$");
yaxis("$y$",0);
draw(graph(f, -4, 2, operator ..), red, "$exp(x)$");  // draw(graph(new real (real x) {return exp(x);}, -4, 2, operator ..), red);
attach(legend(), truepoint(E), 20E, UnFill);  // グラフの説明;
unitsize(x=1cm);
import graph;  ;
real Xmin = -5, Xmax = 5;
real Ymin = -5, Ymax = 5;
xlimits( Xmin, Xmax - .1);
ylimits( Ymin, Ymax - .1);
xaxis(Label("$x$",align=2E), Ticks(modify=NoZero, begin=false, end=true, Size=1mm, size=.7mm), Arrow(2mm));
yaxis(Label("$y$",align=2N), Ticks("%", begin=false, end=true),Arrow(2mm));
labelx("$O$",0,SW);
unitsize(x=1cm);
import graph;  ;
real Xmin = -5, Xmax = 5;
real Ymin = -5, Ymax = 5;
xlimits( Xmin, Xmax - .1);
ylimits( Ymin, Ymax - .1);
xaxis(Label("$x$",align=2E), Ticks(modify=NoZero, begin=false, end=true, Size=1mm, size=.7mm), Arrow(2mm));
yaxis(Label("$y$",align=2N), Ticks("%", begin=false, end=true),Arrow(2mm));
labelx("$O$",0,SW);
dot((0,0));
unitsize(x=1cm);
import graph;  ;
/************************************************************;
 *  座標軸の描画を関数定義しました。;
 *         使用する前に定義しておく必要があります。;
 ************************************************************/;
void myAxis(real Xmin, real Xmax, real Ymin, real Ymax) {;
  xlimits( Xmin, Xmax - .1);
  ylimits( Ymin, Ymax - .1);
  xaxis(Label("$x$",align=2E), Ticks(modify=NoZero, begin=false, end=true, Size=1mm, size=.7mm), Arrow(2mm));
  yaxis(Label("$y$",align=2N), Ticks(modify=NoZero, begin=false, end=true, Size=1mm, size=.7mm), Arrow(2mm));
  labelx("$O$",0,SW);
  dot((0,0));
};
/***********************************************************/;
real Xmin = -5, Xmax = 5;
real Ymin = -5, Ymax = 5;
real f(real x) {return x^2/5;};
draw(graph(f,Xmin,Xmax),red);
myAxis(Xmin, Xmax, Ymin, Ymax);
unitsize(x=1cm);
import graph;  ;
void myAxis(real Xmin, real Xmax, real Ymin, real Ymax) {;
  xlimits( Xmin, Xmax - .1);
  ylimits( Ymin, Ymax - .1);
  xaxis(Label("$x$",align=2E), Ticks(modify=NoZero, begin=false, end=true, Size=1mm, size=.7mm), Arrow(2mm));
  yaxis(Label("$y$",align=2N), Ticks(modify=NoZero, begin=false, end=true, Size=1mm, size=.7mm), Arrow(2mm));
  labelx("$O$",0,SW);
  dot((0,0));
};
real Xmin = -5, Xmax = 5;
real Ymin = -5, Ymax = 5;
real f(real x) {return x^2/5;};
draw(graph(f,Xmin,Xmax),red);
myAxis(Xmin, Xmax, Ymin, Ymax);
help
help
help
help
help
help
help
help
help
